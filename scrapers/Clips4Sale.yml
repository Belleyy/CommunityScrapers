name: "Clips4Sale"
sceneByURL:
  - action: scrapeXPath
    url:
      - clips4sale.com
    scraper: sceneScraper
xPathScrapers:
  sceneScraper:
    scene:
      Title: 
        selector: //div[@class="clip-info__title"]/h3/text()
        postProcess:
          - replace:
              - regex: \s*MP4
                with:
              - regex: \s*Optimum
                with:
              - regex: \s*OPTIMUM
                with:
              - regex: \s*WMV
                with:
              - regex: \s*\(HD-1080p\)
                with:
              - regex: \s*\(HD-720p\)
                with:
      Details:
        selector: //div[@class="modal_clip_description"]//p//text()
        concat: "\n\n"
        postProcess:
          - replace:
              - regex: ^Description:\s*
                with:
      Studio:
        Name: //span[contains(text(),"From:")]/following-sibling::a[2]/text()
        URL:
          selector: //span[contains(text(),"From:")]/following-sibling::a[2]/@href
          postProcess:
            - replace:
              - regex: ^
                with: https://www.clips4sale.com
      Date:
        selector: //strong[contains(text(),"Added:")]/following-sibling::span[contains(@class,"hidden-lg")]/text()
        postProcess:
          - replace:
            - regex: \s.+
              with: ""
          - parseDate: 1/2/06
      Image:
        selector: //button[@id="single-add-to-cart-0"]/@data-src
        postProcess:
          - replace:
              - regex: ^//
                with: https://
      Tags:
        Name: //span[contains(text(),"Related Categories:")]/following-sibling::a|//span[contains(text(),"Keywords:")]/following-sibling::a
        # Clips4Sale doesn't have an explict performer field, but performers are
        # often included in the video tags. So we attempt to find matches there.
      Performers:
        Name: //span[contains(text(),"Keywords:")]/following-sibling::a

# Last Updated May 27, 2021
